let correctAnswer = 0;

// –°–ª–æ–≤–∞—Ä—å –ø–µ—Ä–µ–≤–æ–¥–æ–≤
const translations = {
  ru: {
    title: "Emoji Math Game",
    startText: "–†–µ—à–∏ –ø—Ä–∏–º–µ—Ä, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ —Å—Ç–∏–∫–µ—Ä–æ–≤ –Ω—É–∂–Ω–æ –¥–ª—è —Ä–∞–∫–µ—Ç—ã üöÄ",
    startBtn: "–°—Ç–∞—Ä—Ç",
    checkBtn: "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å",
    restartBtn: "–†–µ—Å—Ç–∞—Ä—Ç",
    correct: (n) => `–í–æ—Ç —Å–∫–æ–ª—å–∫–æ —Å—Ç–∏–∫–µ—Ä–æ–≤ –Ω—É–∂–Ω–æ –Ω–∞–∫–ª–µ–∏—Ç—å –Ω–∞ —Ä–∞–∫–µ—Ç—É üöÄ: ${n}`,
    tryAgain: "–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ üòâ"
  },
  pl: {
    title: "Gra matematyczna z emotikonami",
    startText: "RozwiƒÖ≈º zadanie, aby dowiedzieƒá siƒô, ile naklejek potrzeba na rakietƒô üöÄ",
    startBtn: "Start",
    checkBtn: "Sprawd≈∫",
    restartBtn: "Restart",
    correct: (n) => `Tyle naklejek trzeba przykleiƒá na rakietƒô üöÄ: ${n}`,
    tryAgain: "Spr√≥buj ponownie üòâ"
  },
  en: {
    title: "Emoji Math Game",
    startText: "Solve the example to find out how many stickers are needed for the rocket üöÄ",
    startBtn: "Start",
    checkBtn: "Check",
    restartBtn: "Restart",
    correct: (n) => `This is how many stickers to put on the rocket üöÄ: ${n}`,
    tryAgain: "Try again üòâ"
  },
  pt: { // –ü–æ—Ä—Ç—É–≥–∞–ª—å—Å–∫–∏–π (–ë—Ä–∞–∑–∏–ª–∏—è)
    title: "Jogo de Matem√°tica com Emojis",
    startText: "Resolva o exerc√≠cio para descobrir quantos adesivos s√£o necess√°rios para o foguete üöÄ",
    startBtn: "Iniciar",
    checkBtn: "Verificar",
    restartBtn: "Reiniciar",
    correct: (n) => `Aqui est√° a quantidade de adesivos para colar no foguete üöÄ: ${n}`,
    tryAgain: "Tente novamente üòâ"
  },
  tr: { // –¢—É—Ä–µ—Ü–∫–∏–π
    title: "Emoji Matematik Oyunu",
    startText: "Roket i√ßin ka√ß √ßƒ±kartma gerektiƒüini √∂ƒürenmek i√ßin √∂rneƒüi √ß√∂z üöÄ",
    startBtn: "Ba≈üla",
    checkBtn: "Kontrol Et",
    restartBtn: "Yeniden Ba≈ülat",
    correct: (n) => `Rokete yapƒ±≈ütƒ±rman gereken √ßƒ±kartma sayƒ±sƒ± üöÄ: ${n}`,
    tryAgain: "Tekrar dene üòâ"
  },
  es: { // –ò—Å–ø–∞–Ω—Å–∫–∏–π
    title: "Juego de Matem√°ticas con Emojis",
    startText: "Resuelve el ejercicio para saber cu√°ntas pegatinas necesita el cohete üöÄ",
    startBtn: "Comenzar",
    checkBtn: "Comprobar",
    restartBtn: "Reiniciar",
    correct: (n) => `Estas son las pegatinas que debes poner en el cohete üöÄ: ${n}`,
    tryAgain: "Int√©ntalo de nuevo üòâ"
  },
  it: { // –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
    title: "Gioco di Matematica con Emoji",
    startText: "Risolvi l'esercizio per scoprire quanti adesivi servono per il razzo üöÄ",
    startBtn: "Avvia",
    checkBtn: "Verifica",
    restartBtn: "Ricomincia",
    correct: (n) => `Ecco quanti adesivi devi mettere sul razzo üöÄ: ${n}`,
    tryAgain: "Riprova üòâ"
  }
};

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫
const userLang = navigator.language.slice(0,2); // –Ω–∞–ø—Ä–∏–º–µ—Ä "ru", "pl", "en", "pt", "tr", "es", "it"
const lang = translations[userLang] ? userLang : "en";

// –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
function setTexts() {
  document.getElementById("game-title").textContent = translations[lang].title;
  document.getElementById("start-text").textContent = translations[lang].startText;
  document.getElementById("start-btn").textContent = translations[lang].startBtn;
  document.getElementById("check-btn").textContent = translations[lang].checkBtn;
  document.getElementById("restart-btn").textContent = translations[lang].restartBtn;
}

const emojis = ["üçé","üçå","üçí","üçá","üçâ","üçì","ü•ï","üå∏","‚≠ê","‚öΩ"];

function randomEmoji() {
  return emojis[Math.floor(Math.random() * emojis.length)];
}

function generateNumber(min, max) {
  return Math.floor(Math.random() * (max - min + 1)) + min;
}

function generateGame() {
  const leftCard = document.getElementById("left");
  const rightCard = document.getElementById("right");
  const operatorEl = document.getElementById("operator");

  leftCard.innerHTML = "";
  rightCard.innerHTML = "";

  let leftCount, rightCount, operator, result;

  do {
    leftCount = generateNumber(1, 5);
    rightCount = generateNumber(1, 5);
    operator = Math.random() < 0.5 ? "+" : "-";

    result = operator === "+"
      ? leftCount + rightCount
      : leftCount - rightCount;

  } while (result < 2 || result > 6);  // —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–æ–ª—å–∫–æ 2‚Äì6

  correctAnswer = result;

  // –≠–º–æ–¥–∑–∏ —Å–ª–µ–≤–∞
  for (let i = 0; i < leftCount; i++) {
    const span = document.createElement("span");
    span.className = "emoji";
    span.textContent = randomEmoji();
    leftCard.appendChild(span);
  }

  // –≠–º–æ–¥–∑–∏ —Å–ø—Ä–∞–≤–∞
  for (let i = 0; i < rightCount; i++) {
    const span = document.createElement("span");
    span.className = "emoji";
    span.textContent = randomEmoji();
    rightCard.appendChild(span);
  }

  operatorEl.textContent = operator;
}

function checkAnswer() {
  const input = document.getElementById("answer");
  const value = Number(input.value);

  if (value === correctAnswer) {
    document.getElementById("modal-text").textContent =
      translations[lang].correct(correctAnswer);
    document.getElementById("result-modal").classList.add("active");
  } else {
    alert(translations[lang].tryAgain);
  }
}

function restartGame() {
  document.getElementById("result-modal").classList.remove("active");
  document.getElementById("answer").value = "";
  generateGame();
}

function startGame() {
  document.getElementById("start-screen").classList.remove("active");
  generateGame();
}

// –ø—Ä–∏–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
setTexts();

function closeApp() {
  // üîπ –í–∞—Ä–∏–∞–Ω—Ç 1: –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
  document.body.innerHTML = "<h2 style='text-align:center; margin-top:40px;'>üöÄ</h2>";

  // üîπ –í–∞—Ä–∏–∞–Ω—Ç 2 (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞): –∑–∞–∫—Ä—ã—Ç—å —Ç–æ–ª—å–∫–æ –º–æ–¥–∞–ª–∫—É –∏ —Å–∫—Ä—ã—Ç—å –≤–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç
  // document.getElementById("result-modal").classList.remove("active");
  // document.querySelector("h1").style.display = "none";
  // document.querySelector(".game").style.display = "none";
  // document.querySelector(".input-area").style.display = "none";
}
